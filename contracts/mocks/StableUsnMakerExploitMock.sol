// SPDX-License-Identifier: MIT

pragma solidity 0.6.12;
pragma experimental ABIEncoderV2;

import "../rewards/StableUsnMaker.sol";

contract StableUsnMakerExploitMock {
    StableUsnMaker public immutable stableUsnMaker;

    constructor(address _stableUsnMaker) public {
        stableUsnMaker = StableUsnMaker(_stableUsnMaker);
    }

    function convertStables(
        address swap, // Stableswap Pool
        address[] calldata stableTokensToRemoveTo, // Stable tokens to remove from the LP at the same index
        address[][] calldata triConversionPaths // Tri conversion paths for each stable token, first address is the stable token removed and last address is always TRI
    ) external {
        stableUsnMaker.convertStables();
    }
}
